// <auto-generated />
using System;
using DiscordCoopCodes.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscordCoopCodes.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190605035544_UpdateCoopStatus")]
    partial class UpdateCoopStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.Contract", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("P11");

                    b.Property<int>("P2");

                    b.Property<int>("P4");

                    b.Property<double>("P6");

                    b.Property<double>("P7");

                    b.Property<string>("Rewards");

                    b.HasKey("ID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.Coop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContractID");

                    b.Property<DateTimeOffset?>("CoopEnds");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ContractID");

                    b.ToTable("Coops");
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.CoopStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Base64Data");

                    b.Property<Guid>("CoopId");

                    b.Property<DateTimeOffset>("Created");

                    b.HasKey("Id");

                    b.HasIndex("CoopId");

                    b.ToTable("CoopStatuses");
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.DiscordUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreateOn");

                    b.Property<decimal>("DiscordId")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("EggIncIds");

                    b.HasKey("Id");

                    b.ToTable("DiscordUsers");
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.UserCoopXref", b =>
                {
                    b.Property<Guid>("DiscordUserId");

                    b.Property<Guid>("CoopId");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.HasKey("DiscordUserId", "CoopId");

                    b.HasIndex("CoopId");

                    b.ToTable("UserCoopXrefs");
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.Coop", b =>
                {
                    b.HasOne("DiscordCoopCodes.Database.Entities.Contract", "Contract")
                        .WithMany("Coops")
                        .HasForeignKey("ContractID");
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.CoopStatus", b =>
                {
                    b.HasOne("DiscordCoopCodes.Database.Entities.Coop", "Coop")
                        .WithMany("CoopStatuses")
                        .HasForeignKey("CoopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DiscordCoopCodes.Database.Entities.UserCoopXref", b =>
                {
                    b.HasOne("DiscordCoopCodes.Database.Entities.Coop", "Coop")
                        .WithMany("UserCoopsXrefs")
                        .HasForeignKey("CoopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DiscordCoopCodes.Database.Entities.DiscordUser", "DiscordUser")
                        .WithMany("UserCoopXrefs")
                        .HasForeignKey("DiscordUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
